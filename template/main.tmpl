{{define "main" -}}
package main

import (
	"io"
	"net/http"
	"text/template"

	"github.com/labstack/echo"
	"github.com/labstack/echo/middleware"
	"github.com/sonyarouje/simdb/db"
)

var driver *db.Driver


type Template struct {
	templates *template.Template
}

func (t *Template) Render(w io.Writer, name string, data interface{}, c echo.Context) error {
	return t.templates.ExecuteTemplate(w, name, data)
}

func dashboard(c echo.Context) error {
	return c.Render(http.StatusOK, "dashboard", "")
}

func main() {
	// Database initialisation
//	_, driver = InitializeDb()

	// Echo instance
	e := echo.New()
	// Instantiate a template registry with an array of template set
	// Ref: https://gist.github.com/rand99/808e6e9702c00ce64803d94abff65678
	renderer := &Template{
		templates: template.Must(template.ParseGlob("view/*.html")),
	}
	e.Renderer = renderer

	// Middleware
	e.Use(middleware.Logger())
	e.Use(middleware.Recover())

	// Routes
	e.GET("/", dashboard) // Opens Dashboard
	{{range .Entities}}
	// routes for {{.Name}}
	e.GET("/{{.Name | plural | lowercase }}", list{{plural .Name}})
	e.GET("/{{.Name | plural | lowercase }}/:id", get{{.Name}})
	e.GET("/{{.Name | plural | lowercase }}/new", new{{.Name}})
	e.POST("/{{.Name | plural | lowercase }}", create{{.Name}})
	e.POST("/{{.Name | plural | lowercase }}/:id", update{{.Name}})
	e.POST("/{{.Name | plural | lowercase }}/:id/delete", delete{{.Name}})
	{{end}}
	
	// Start server
	e.Logger.Fatal(e.Start(":80"))
}
{{end}}

